{
  
    
        "post0": {
            "title": "Looking into food price inflation using data from Tesco",
            "content": "Since July 2021 the Consumer Prices Index (CPI) inflation rate in the UK has broken away from the Bank of England&#39;s target rate of 2%, steadily rising month by month. As of 3rd September 2022, the inflation rate stands at 10.1% with no indication of decreasing. What an awfully depressing way to start a blog post but unfortunately this is the reality that we are all currently facing in the UK. Every month the Office for National Statistics (ONS) calculates CPI by collecting the prices for a basket of around 730 different consumer goods and services that is a representation of the society&#39;s current buying habits and measures the average change in price of the basket on a year-over-year basis. At a risk of grossly simplifing, CPI tells us how much prices in general have changed over the last 12 months. . . CPI annual inflation rates from July 2012 to July 2022. CPIH stands for Consumer Prices Index with Housing and OOH stands for Owner Occupied Housing (costs). . That&#39;s all nice and well but society&#39;s buying habits don&#39;t necessarily reflect my buying habits. There are 12 broad categories of goods and services in the CPI basket, some of these categories such as clothing and footware, and furniture and household goods don&#39;t apply to me as I rarely ever buy new clothes or furniture. The full list of categories and goods and services of each category can be found on the ONS website here. One category that does apply to me, and to everyone else, is food. Food (excluding alcohol) goods currently account for 9.3% of the weighting in CPI, which is a relatively small slice of the pie. . During recent times I&#39;ve noticed that my shopping bill has gone up overall but I can&#39;t quite pin down what items are contributing the most to the this increase. To this end, I&#39;ve built a cloud-based webscraping application that scrapes produdct data from Tesco&#39;s website including price and categories (blog article incoming). The reason why I chose Tescos as opposed to any other supermarket is because it&#39;s 5 minutes down the road from me. . In this article we&#39;ll load, process, transform, and analyse this scraped data to see how the prices of food categories have changed over time. . Data overview and processing . The webscraping pipeline was ran on a near daily basis from 28th February 2022 to 13th June 2022, there&#39;s 90 days worth of data. For each day, the names, price per unit and price per weight or quantity, product category and subcategories, promotional offers, and clubcard prices were collected. All prices are in pound sterling (£). The way that Tesco categorises products is through a main (or parent) category followed by 3 subcategories, each more granular than the last. . The scraped data from Tesco is in the following format: . name price_per_unit price_per_weight_quant weight_quant_unit offer category_1 category_2 category_3 category_4 clubcard_price_per_unit clubcard_discount_perc date . index . 0 Tesco Macaroni Pasta 1Kg | 1.3 | 1.30 | kg | NaN | food-cupboard | dried-pasta-rice-noodles-and-cous-cous | pasta-and-spaghetti | pasta-macaroni-penne-and-rigatoni | NaN | NaN | 2022-02-28 | . 1 Canderel 5 Refill Sachets 500Pk | 5.1 | 120.00 | kg | NaN | food-cupboard | home-baking-and-sugar | sweeteners-and-sugar-substitutes | sweetener-tablets | NaN | NaN | 2022-02-28 | . 2 Highland Still Spring Water 12 X 330Ml | 2.5 | 0.06 | 100ml | NaN | drinks | water | still-water | small-still-water | NaN | NaN | 2022-02-28 | . 3 Del Monte Sliced Pineapple In Syrup 425G | 1.1 | 3.96 | kg DR.WT | NaN | food-cupboard | tins-cans-and-packets | tinned-and-pot-fruit | tinned-pineapples | NaN | NaN | 2022-02-28 | . 4 Tesco Organic Pure Set Honey 340G | 3.2 | 0.94 | 100g | NaN | food-cupboard | jams-sweet-and-savoury-spreads | honey-and-syrups | set-honey | NaN | NaN | 2022-02-28 | . In its current state, the data is too granular to work with. It&#39;s reasonable to assume that the price of vast majority of products don&#39;t change on a day to day basis, so we&#39;ll transform the data into a weekly format where we&#39;ll take the median price of a product for the entire week commencing on Monday as the aggregation metric. This will account for any pricing errors from Tesco&#39;s pricing department which could dramatically skew the mean value (e.g., accidentally setting the price of a bag of 5kg basmati rice as £500 instead of £5.00 for a day before being corrected will affect the mean but not the median). We&#39;ll also drop out columns that aren&#39;t needed for this piece of analysis. Namely the clubcard, promotional offer, and weight/quantity column. . Once transformed, we&#39;ll take the example of Tesco Ground Cinnamon (40G Jar) to see the format of the processed data: . grouped_df[grouped_df[&#39;name&#39;] == &#39;Tesco Ground Cinnamon 40G Jar&#39;] . name category_1 category_2 category_3 category_4 date price_per_unit price_per_weight_quant . 177240 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-02-28 | 0.85 | 0.21 | . 177241 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-03-07 | 0.85 | 0.21 | . 177242 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-03-14 | 0.85 | 0.21 | . 177243 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-03-21 | 0.85 | 0.21 | . 177244 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-03-28 | 0.85 | 0.21 | . 177245 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-04-04 | 0.85 | 0.21 | . 177246 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-04-11 | 0.85 | 0.21 | . 177247 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-04-18 | 0.85 | 0.21 | . 177248 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-04-25 | 0.85 | 0.21 | . 177249 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-05-02 | 1.00 | 0.25 | . 177250 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-05-09 | 1.00 | 0.25 | . 177251 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-05-16 | 1.00 | 0.25 | . 177252 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-05-23 | 1.00 | 0.25 | . 177253 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-05-30 | 1.00 | 0.25 | . 177254 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-06-06 | 1.00 | 0.25 | . 177255 Tesco Ground Cinnamon 40G Jar | food-cupboard | cooking-ingredients | seasoning-herbs-and-spices | spices | 2022-06-13 | 1.00 | 0.25 | . While we&#39;re at it, let&#39;s take a look at how many different subcategories each main categories has: . Main category Number of secondary categories Number of tertiary categories Number of quaternary categories . 0 fresh-food | 19 | 180 | 606 | . 1 drinks | 18 | 77 | 272 | . 2 food-cupboard | 18 | 173 | 682 | . 3 bakery | 10 | 52 | 78 | . 4 frozen-food | 15 | 76 | 148 | . It&#39;s very clear that fresh food and food cupboard main categories have the largest amount of products judging by the number of quaternary categories they have. The bakery main category seems to be the smallest with not much of an increase going from tertiarty to quaternary categories. . Calculating index numbers . Before we can go on with our analysis, we need to first understand what index numbers are and how they&#39;re used in the context of measuring inflation. . for cat in skipped_cat_dict: print(cat, len(skipped_cat_dict[cat])) . category_2 4 category_3 145 category_4 1036 . tmp_df = cat_index_dict[&#39;category_4&#39;].reset_index(drop=True).copy() latest_date_mask = tmp_df[&#39;date&#39;] == &#39;2022-06-13&#39; tmp_df[&#39;index&#39;] = tmp_df[&#39;index&#39;].round(2) fig = px.sunburst( tmp_df[latest_date_mask], path=[&#39;category_1&#39;, &#39;category_2&#39;, &#39;category_3&#39;, &#39;category_4&#39;], values=&#39;index&#39;, color=&#39;index&#39;, range_color=[90,110], color_continuous_scale=&#39;balance&#39;, color_continuous_midpoint=100, width=1800, height=1200 ) fig.show() # fig.write_html(&#39;tesco_food_category_index.html&#39;) . px.imshow( cat_index_dict[&#39;category_2&#39;].pivot_table(index=&#39;date&#39;, columns=[&#39;category_2&#39;], values=&#39;index&#39;).corr(), labels=dict(x=&quot;Secondary Category&quot;, y=&quot;Secondary Category&quot;, color=&quot;Correlation&quot;), color_continuous_scale=&#39;balance&#39;, color_continuous_midpoint=0, aspect=&quot;auto&quot;, height=1000, width=1200 ) .",
            "url": "https://blee1077.github.io/solverism-blog/inflation/analysis/2022/09/04/tesco-price-analysis.html",
            "relUrl": "/inflation/analysis/2022/09/04/tesco-price-analysis.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://blee1077.github.io/solverism-blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://blee1077.github.io/solverism-blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://blee1077.github.io/solverism-blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://blee1077.github.io/solverism-blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}